// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: h2pcontrol.proto

package h2pcontrol_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivateServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivateServicesRequest) Reset() {
	*x = ActivateServicesRequest{}
	mi := &file_h2pcontrol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateServicesRequest) ProtoMessage() {}

func (x *ActivateServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateServicesRequest.ProtoReflect.Descriptor instead.
func (*ActivateServicesRequest) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{0}
}

type ActiveServicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*ServiceDefinition   `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveServicesResponse) Reset() {
	*x = ActiveServicesResponse{}
	mi := &file_h2pcontrol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveServicesResponse) ProtoMessage() {}

func (x *ActiveServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveServicesResponse.ProtoReflect.Descriptor instead.
func (*ActiveServicesResponse) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{1}
}

func (x *ActiveServicesResponse) GetServices() []*ServiceDefinition {
	if x != nil {
		return x.Services
	}
	return nil
}

type HeartbeatPing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatPing) Reset() {
	*x = HeartbeatPing{}
	mi := &file_h2pcontrol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatPing) ProtoMessage() {}

func (x *HeartbeatPing) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatPing.ProtoReflect.Descriptor instead.
func (*HeartbeatPing) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{2}
}

type HeartbeatPong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatPong) Reset() {
	*x = HeartbeatPong{}
	mi := &file_h2pcontrol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatPong) ProtoMessage() {}

func (x *HeartbeatPong) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatPong.ProtoReflect.Descriptor instead.
func (*HeartbeatPong) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatPong) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

type ServiceDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ProtoFiles    []*File                `protobuf:"bytes,3,rep,name=proto_files,json=protoFiles,proto3" json:"proto_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceDefinition) Reset() {
	*x = ServiceDefinition{}
	mi := &file_h2pcontrol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDefinition) ProtoMessage() {}

func (x *ServiceDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDefinition.ProtoReflect.Descriptor instead.
func (*ServiceDefinition) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceDefinition) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceDefinition) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceDefinition) GetProtoFiles() []*File {
	if x != nil {
		return x.ProtoFiles
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *ServiceDefinition     `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_h2pcontrol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterRequest) GetService() *ServiceDefinition {
	if x != nil {
		return x.Service
	}
	return nil
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_h2pcontrol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type StubRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Language      string                 `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"` // e.g., "python", "java"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StubRequest) Reset() {
	*x = StubRequest{}
	mi := &file_h2pcontrol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StubRequest) ProtoMessage() {}

func (x *StubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StubRequest.ProtoReflect.Descriptor instead.
func (*StubRequest) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{7}
}

func (x *StubRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StubRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StubRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type StubResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ZipData       []byte                 `protobuf:"bytes,2,opt,name=zip_data,json=zipData,proto3" json:"zip_data,omitempty"`
	Checksum      string                 `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"` // Optional checksum (e.g., SHA256)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StubResponse) Reset() {
	*x = StubResponse{}
	mi := &file_h2pcontrol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StubResponse) ProtoMessage() {}

func (x *StubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StubResponse.ProtoReflect.Descriptor instead.
func (*StubResponse) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{8}
}

func (x *StubResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StubResponse) GetZipData() []byte {
	if x != nil {
		return x.ZipData
	}
	return nil
}

func (x *StubResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_h2pcontrol_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_h2pcontrol_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_h2pcontrol_proto_rawDescGZIP(), []int{9}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_h2pcontrol_proto protoreflect.FileDescriptor

const file_h2pcontrol_proto_rawDesc = "" +
	"\n" +
	"\vh2pcontrol.proto\x12\x05h2pcontrol\"\x19\n" +
	"\x17ActivateServicesRequest\"N\n" +
	"\x16ActiveServicesResponse\x124\n" +
	"\bservices\x18\x01 \x03(\v2\x18.h2pcontrol.ServiceDefinitionR\bservices\"\x0f\n" +
	"\rHeartbeatPing\")\n" +
	"\rHeartbeatPong\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\"~\n" +
	"\x11ServiceDefinition\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12,\n" +
	"\vproto_files\x18\x03 \x03(\v2\v.h2pcontrol.FileR\n" +
	"protoFiles\"E\n" +
	"\x0fRegisterRequest\x122\n" +
	"\aservice\x18\x01 \x01(\v2\x18.h2pcontrol.ServiceDefinitionR\aservice\"*\n" +
	"\x10RegisterResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"f\n" +
	"\vStubRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\"Y\n" +
	"\fStubResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bzip_data\x18\x02 \x01(\fR\azipData\x12\x1a\n" +
	"\bchecksum\x18\x03 \x01(\tR\bchecksum\"4\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent2\x8d\x02\n" +
	"\aManager\x122\n" +
	"\aGetStub\x12\x12.h2pcontrol.StubRequest\x1a\x13.h2pcontrol.StubResponse\x12A\n" +
	"\x0eRegisterServer\x12\x16.h2pcontrol.RegisterRequest\x1a\x17.h2pcontrol.RegisterResponse\x127\n" +
	"\tHeartbeat\x12\x14.h2pcontrol.HeartbeatPing\x1a\x14.h2pcontrol.HeartbeatPong\x12R\n" +
	"\x11GetActiveServices\x12\x1e.h2pcontrol.ActivateServicesRequest\x1a\x1d.h2pcontrol.ActiveServicesResponseB)\n" +
	"\x0fio.h2pcontrol.clientB\x05h2pcontrolP\x01Z\rh2pcontrol.managerb\x06proto3"

var (
	file_h2pcontrol_proto_rawDescOnce sync.Once
	file_h2pcontrol_proto_rawDescData []byte
)

func file_h2pcontrol_proto_rawDescGZIP() []byte {
	file_h2pcontrol_proto_rawDescOnce.Do(func() {
		file_h2pcontrol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_h2pcontrol_proto_rawDesc), len(file_h2pcontrol_proto_rawDesc)))
	})
	return file_h2pcontrol_proto_rawDescData
}

var file_h2pcontrol_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_h2pcontrol_proto_goTypes = []any{
	(*ActivateServicesRequest)(nil), // 0: h2pcontrol.ActivateServicesRequest
	(*ActiveServicesResponse)(nil),  // 1: h2pcontrol.ActiveServicesResponse
	(*HeartbeatPing)(nil),           // 2: h2pcontrol.HeartbeatPing
	(*HeartbeatPong)(nil),           // 3: h2pcontrol.HeartbeatPong
	(*ServiceDefinition)(nil),       // 4: h2pcontrol.ServiceDefinition
	(*RegisterRequest)(nil),         // 5: h2pcontrol.RegisterRequest
	(*RegisterResponse)(nil),        // 6: h2pcontrol.RegisterResponse
	(*StubRequest)(nil),             // 7: h2pcontrol.StubRequest
	(*StubResponse)(nil),            // 8: h2pcontrol.StubResponse
	(*File)(nil),                    // 9: h2pcontrol.File
}
var file_h2pcontrol_proto_depIdxs = []int32{
	4, // 0: h2pcontrol.ActiveServicesResponse.services:type_name -> h2pcontrol.ServiceDefinition
	9, // 1: h2pcontrol.ServiceDefinition.proto_files:type_name -> h2pcontrol.File
	4, // 2: h2pcontrol.RegisterRequest.service:type_name -> h2pcontrol.ServiceDefinition
	7, // 3: h2pcontrol.Manager.GetStub:input_type -> h2pcontrol.StubRequest
	5, // 4: h2pcontrol.Manager.RegisterServer:input_type -> h2pcontrol.RegisterRequest
	2, // 5: h2pcontrol.Manager.Heartbeat:input_type -> h2pcontrol.HeartbeatPing
	0, // 6: h2pcontrol.Manager.GetActiveServices:input_type -> h2pcontrol.ActivateServicesRequest
	8, // 7: h2pcontrol.Manager.GetStub:output_type -> h2pcontrol.StubResponse
	6, // 8: h2pcontrol.Manager.RegisterServer:output_type -> h2pcontrol.RegisterResponse
	3, // 9: h2pcontrol.Manager.Heartbeat:output_type -> h2pcontrol.HeartbeatPong
	1, // 10: h2pcontrol.Manager.GetActiveServices:output_type -> h2pcontrol.ActiveServicesResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_h2pcontrol_proto_init() }
func file_h2pcontrol_proto_init() {
	if File_h2pcontrol_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_h2pcontrol_proto_rawDesc), len(file_h2pcontrol_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_h2pcontrol_proto_goTypes,
		DependencyIndexes: file_h2pcontrol_proto_depIdxs,
		MessageInfos:      file_h2pcontrol_proto_msgTypes,
	}.Build()
	File_h2pcontrol_proto = out.File
	file_h2pcontrol_proto_goTypes = nil
	file_h2pcontrol_proto_depIdxs = nil
}
